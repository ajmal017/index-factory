service: index-factory

frameworkVersion: ">=1.1.0 <2.0.0"

custom:
  tableName: 'index-factory-table-${self:provider.stage}'

  wsgi:
    app: src/app.handler
    packRequirements: false

  pythonRequirements:
    dockerizePip: non-linux

  dynamodb:
    stages:
      - local
    start:
      host: 127.0.0.1
      port: 8000
      migrate: true

  s3:
    host: 127.0.0.1
    port: 8001
    directory: /tmp

provider:
  name: aws
  runtime: python3.6
  stage: local
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - Fn::GetAtt: [IndexFactoryDynamoDBTable, Arn]

  environment:
    INDEX_FACTORY_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http:
          path: /
          method: ANY
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
      - http: 'ANY {proxy+}'

  computeIndex:
    handler: src/app.compute_indices
    events:
      - s3: local-bucket
        event: s3:*
      - stream:
        enabled: true
        type: dynamodb
        batchSize: 1
        startingPosition: TRIM_HORIZON
        arn:
          Fn::GetAtt: [IndexFactoryDynamoDBTable, StreamArn]

resources:
  ApiGatewayAuthorizer:
    DependsOn:
      - ApiGatewayRestApi
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: cognito-authorizer
      IdentitySource: method.request.header.Authorization
      RestApiId:
        Ref: ApiGatewayRestApi
      Type: COGNITO_USER_POOLS
      ProviderARNs:
        - Fn::GetAtt: [CognitoUserPool, Arn]

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      MfaConfiguration: OFF
      UserPoolName: index-factory-user-pool
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: False
          RequireNumbers: True
          RequireSymbols: False
          RequireUppercase: True

  Resources:

    IndexFactoryS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: index-factory-daily-prices

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: index-factory-user-pool-client
        GenerateSecret: False
        UserPoolId:
          Ref: CognitoUserPool

    IndexFactoryDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          -
            AttributeName: partitionKey
            AttributeType: S
          -
            AttributeName: sortKey
            AttributeType: S
        KeySchema:
          -
            AttributeName: partitionKey
            KeyType: HASH
          -
            AttributeName: sortKey
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

# - serverless-offline-dynamodb-streams
plugins:
  - serverless-dynamodb-local
  - serverless-s3-local
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-offline # serverless-offline needs to be last in the list
